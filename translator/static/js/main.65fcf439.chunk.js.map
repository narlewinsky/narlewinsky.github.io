{"version":3,"sources":["Board.js","App.js","reportWebVitals.js","index.js"],"names":["Board","props","handleChange","bind","state","content","e","this","setState","target","value","className","placeholder","onChange","romanize","readonly","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oVAsCeA,E,kDAhCX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,MAAQ,CAAEC,QAAS,IAHT,E,gDAMnB,SAAaC,GACTC,KAAKC,SAAS,CACVH,QAASC,EAAEG,OAAOC,U,oBAI1B,WACI,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKA,UAAU,eAAf,SACI,0BAAUA,UAAU,wBACVC,YAAY,4KACZC,SAAUN,KAAKL,iBAE7B,qBAAKS,UAAU,gBAAf,SACI,0BAAUA,UAAU,yBACVD,MAAOI,IAASP,KAAKH,MAAMC,SAC3BU,UAAQ,a,GAxBlBC,aCMLC,MARf,WACI,OACI,qBAAKN,UAAU,MAAf,SACI,cAAC,EAAD,OCMGO,EAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDpBQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.65fcf439.chunk.js","sourcesContent":["import './Board.css';\nimport React, { Component } from 'react';\nimport { scroller } from \"react-scroll\";\nimport romanize from 'ruromanization-core';\n\nclass Board extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n        this.state = { content: \"\" }\n    }\n\n    handleChange(e) {\n        this.setState({\n            content: e.target.value\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"Board\">\n                <div className=\"Board-Editor\">\n                    <textarea className=\"Board-Editor-TextArea\"\n                              placeholder=\"Введите сюда текст на кириллице...\"\n                              onChange={this.handleChange} />\n                </div>\n                <div className=\"Board-Preview\">\n                    <textarea className=\"Board-Preview-TextArea\"\n                              value={romanize(this.state.content)}\n                              readonly />\n                </div>\n            </div>\n        )\n    }\n}\n\n// {romanize(this.state.content)}\n\nexport default Board;\n","import './App.css';\nimport Board from './Board'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Board />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}